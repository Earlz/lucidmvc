


/*Generated by the BSD Licensed BarelyMVC ViewGenerator T4 file*/
using System.Text;
using System.Collections.Generic;
using System.Web;
using System.IO;
using System;
using Earlz.BarelyMVC.ViewEngine;
using Earlz.BarelyMVC;

        //custom using statements for your views go here:
        
    
/*File: TestView */
namespace Earlz.BarelyMVC.MyViews{
        ///<summary>
        ///
        ///</summary>
     class TestView: Earlz.BarelyMVC.ViewEngine.Internal.BarelyViewDummy
    {
                ///<summary>
        ///
        ///</summary>
            public string Test{
        get;
        set;
        }

                ///<summary>
        ///This is the layout of the given view (master page)
        ///</summary>
            public IBarelyView Layout{
        get;
        set;
        }

                ///<summary>
        ///Indicates if this view is set to be rendered directly to the appropriate stream
        ///</summary>
            public override bool RenderedDirectly{
        get{ return __RenderDirectly; }
        }

                ///<summary>
        ///The "Flash" notification text(passes through to the layout
        ///</summary>
            public override string Flash{
        get{return Layout.Flash;}
        set{Layout.Flash=value;}
        }

         void BuildOutput()
        {
__Write(@"");
__Write(@"

");
{
                object __v;
                

                    __v=Test;
                
__OutputVariable(__v);
}
__Write(@"");

        }
         void __Init(TextWriter writer)
        {
__Writer=writer;
        }
        public  TestView()
        {
__Init(new System.IO.StringWriter());
        }
        public  TestView(System.IO.TextWriter outputStream)
        {
__Init(outputStream);
        }
        protected virtual void __Write(string s)
        {
if(__Writer!=null){ __Writer.Write(s); } __Output.Append(s);
        }
        protected virtual void __Write(IBarelyView v)
        {
string s=v.RenderView(); __Output.Append(s);
        }
        public override string RenderView()
        {
__Output=new StringBuilder();
if(Layout==null){
        BuildOutput();
        return __Output.ToString();
}
if(__InLayout){
        //If we get here, then the layout is currently trying to render itself(and we are being rendered as a partial/sub view)
        __InLayout=false;
        BuildOutput();
        return __Output.ToString();
}else{
        //otherwise, we are here and someone called RenderView on us(and we have a layout to render first)
        __InLayout=true;
        return Layout.RenderView(); 
}
//This should recurse no more than 2 times
//Basically, this will go to hell if there is ever more than 1 partial view with a Layout set.
        }
        protected void __OutputVariable(object v)
        {

            {
                if(v!=null)
                {
                    var e=v as System.Collections.IEnumerable;
                    if (e!=null)
                    {
                        foreach(var item in e){ 
                            var view=item as Earlz.BarelyMVC.ViewEngine.IBarelyView;
                            if(view!=null){
                                __Write(view);
                            }else{
                                __Write(item.ToString());
                            }
                        }
                    }else{
                        var view=v as Earlz.BarelyMVC.ViewEngine.IBarelyView;
                        if(view!=null){
                            __Write(view);
                        }else{
                            __Write(v.ToString());
                        }
                    }
                }        
            }
        }
                ///<summary>
        ///For internal use only!
        ///</summary>
         StringBuilder __Output;
                ///<summary>
        ///For internal use only!
        ///</summary>
         bool __InLayout=false;
                ///<summary>
        ///For internal use only!
        ///</summary>
         TextWriter __Writer;
                ///<summary>
        ///For internal use only!
        ///</summary>
         bool __RenderDirectly=false;

    }
}


//	
